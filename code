=======================================
INICIO FICHERO >> ./docker-compose.yml
=======================================
services:
  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_USER: qa
      POSTGRES_PASSWORD: qapass
      POSTGRES_DB: qaapp
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"

  backend:
    build:
      context: ./backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://qa:qapass@postgres:5432/qaapp
    volumes:
      - ./backend:/app:delegated
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_started
    command: >
      sh -c "until pg_isready -h postgres -p 5432; do echo 'Esperando a Postgres...'; sleep 1; done &&
      npm start"

  frontend:
    build:
      context: ./frontend
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://backend:3001/api
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev -- --host
    depends_on:
      - backend

volumes:
  pgdata:
networks:
  default:
    driver: bridge
=======================================
FIN FICHERO >> ./docker-compose.yml
=======================================
=======================================
INICIO FICHERO >> ./backend/Dockerfile
=======================================
# Backend: Node (Debian) - buena para dependencias nativas
FROM node:20-bullseye

WORKDIR /app

# Copiamos package.json antes para aprovechar cache de Docker
COPY package*.json ./

# Instalamos dependencias sin auditoría ni prompts
RUN npm install --no-audit --no-fund

# Protegemos node_modules para que no se sobreescriba con bind mount
VOLUME [ "/app/node_modules" ]

# Copiamos el resto del código
COPY . .

EXPOSE 3001

# Comando por defecto
CMD ["npm", "start"]
=======================================
FIN FICHERO >> ./backend/Dockerfile
=======================================
=======================================
INICIO FICHERO >> ./frontend/Dockerfile
=======================================
# Frontend: Vite + React
FROM node:20-alpine

WORKDIR /app

# Copiamos package.json y package-lock.json
COPY package*.json ./

RUN npm install --no-audit --no-fund

COPY . .

EXPOSE 5173

CMD ["npm", "run", "dev", "--", "--host"]
=======================================
FIN FICHERO >> ./frontend/Dockerfile
=======================================
=======================================
INICIO FICHERO >> ./Dockerfile
=======================================
# Si este es un servidor Node independiente
FROM node:18-alpine

WORKDIR /app

COPY package*.json ./
RUN npm install --no-audit --no-fund

COPY . .

EXPOSE 3000

CMD ["node", "server/server.js"]
=======================================
FIN FICHERO >> ./Dockerfile
=======================================
