=======================================
INICIO FICHERO >> ./frontend/src/App.tsx
=======================================
// @ts-nocheck
import { useEffect } from "react";
import { BrowserRouter as Router, Route, Routes, Navigate } from "react-router-dom";
import Home from "./pages/Home";
import Users from "./pages/Users";
import Products from "./pages/Products";
import Logs from "./pages/Logs";
import Settings from "./pages/Settings";
import Support from "./pages/Support";
import Rating from "./pages/Rating";
import NotFound from "./pages/NotFound";
import Navbar from "./components/Navbar";

function App() {
  useEffect(() => {
    const timeout = setTimeout(() => {
      alert("Sesión expirada por inactividad");
      window.location.href = "/";
    }, 1000 * 60 * 10); // 10 minutos

    return () => clearTimeout(timeout);
  }, []);

  return (
    <Router>
      <Navbar />
      <Routes>
        <Route path="/" element={<Home />} />
        <Route path="/users" element={<Users />} />
        <Route path="/products" element={<Products />} />
        <Route path="/logs" element={<Logs />} />
        <Route path="/settings" element={<Settings />} />
        <Route path="/support" element={<Support />} />
        <Route path="/rating" element={<Rating />} />
        <Route path="*" element={<NotFound />} />
      </Routes>
    </Router>
  );
}

export default App;
=======================================
FIN FICHERO >> ./frontend/src/App.tsx
=======================================

=======================================
INICIO FICHERO >> ./frontend/src/pages/Settings.tsx
=======================================
import { useState, useEffect } from "react";

function Settings() {
  const [autoTest, setAutoTest] = useState(false);

  useEffect(() => {
    const saved = localStorage.getItem("qa-auto") === "true";
    setAutoTest(saved);
  }, []);

  const toggle = () => {
    localStorage.setItem("qa-auto", (!autoTest).toString());
    setAutoTest(!autoTest);
  };

  return (
    <div className="p-6">
      <h2 className="text-xl font-bold mb-4">⚙️ Configuración QA</h2>
      <label className="flex items-center gap-2">
        <input
          type="checkbox"
          checked={autoTest}
          onChange={toggle}
          data-qa-id="toggle-autotest"
        />
        Activar ejecución automática de tests tras cada cambio
      </label>
    </div>
  );
}

export default Settings;
=======================================
FIN FICHERO >> ./frontend/src/pages/Settings.tsx
=======================================

=======================================
INICIO FICHERO >> ./frontend/src/pages/Support.tsx
=======================================
import { useState } from "react";

function Support() {
  const [email, setEmail] = useState("");
  const [msg, setMsg] = useState("");

  const handleSubmit = (e) => {
    e.preventDefault();
    alert(`Soporte enviado desde ${email}: ${msg}`);
    setEmail("");
    setMsg("");
  };

  return (
    <div className="p-6">
      <h2 className="text-xl font-bold mb-4">🛠 Soporte Técnico</h2>
      <form onSubmit={handleSubmit} className="space-y-4" data-qa-id="form-support">
        <input
          type="email"
          placeholder="Tu correo"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
          className="border p-2 w-full"
          required
          data-qa-id="input-email"
        />
        <textarea
          placeholder="¿En qué podemos ayudarte?"
          value={msg}
          onChange={(e) => setMsg(e.target.value)}
          className="border p-2 w-full"
          required
          data-qa-id="input-message"
        />
        <button className="bg-blue-600 text-white px-4 py-2 rounded" type="submit" data-qa-id="submit-support">
          Enviar
        </button>
      </form>
    </div>
  );
}

export default Support;
=======================================
FIN FICHERO >> ./frontend/src/pages/Support.tsx
=======================================

=======================================
INICIO FICHERO >> ./frontend/src/pages/Rating.tsx
=======================================
import { useState } from "react";

function Rating() {
  const [score, setScore] = useState(0);

  return (
    <div className="p-6">
      <h2 className="text-xl font-bold mb-4">⭐ Valora nuestra plataforma</h2>
      <div className="flex space-x-2 text-2xl" data-qa-id="rating-stars">
        {[1, 2, 3, 4, 5].map((n) => (
          <span
            key={n}
            onClick={() => setScore(n)}
            style={{ cursor: "pointer", color: n <= score ? "gold" : "gray" }}
            data-qa-id={`star-${n}`}
          >
            ★
          </span>
        ))}
      </div>
      {score > 0 && (
        <p className="mt-4 text-green-600 font-semibold" data-qa-id="rating-msg">
          ¡Gracias por darnos {score} estrella{score > 1 ? "s" : ""}!
        </p>
      )}
    </div>
  );
}

export default Rating;
=======================================
FIN FICHERO >> ./frontend/src/pages/Rating.tsx
=======================================

=======================================
INICIO FICHERO >> ./frontend/src/pages/NotFound.tsx
=======================================
function NotFound() {
  return (
    <div className="p-6 text-center">
      <h1 className="text-3xl font-bold mb-2">🚫 Página no encontrada</h1>
      <p>La ruta que buscas no existe.</p>
    </div>
  );
}

export default NotFound;
=======================================
FIN FICHERO >> ./frontend/src/pages/NotFound.tsx
=======================================

=======================================
INICIO FICHERO >> ./frontend/src/components/Navbar.tsx
=======================================
import { NavLink } from "react-router-dom";

function Navbar() {
  const links = [
    { to: "/", label: "🏠 Home" },
    { to: "/users", label: "👥 Usuarios" },
    { to: "/products", label: "📦 Productos" },
    { to: "/logs", label: "🧾 Logs" },
    { to: "/settings", label: "⚙️ Settings" },
    { to: "/support", label: "🛠 Soporte" },
    { to: "/rating", label: "⭐ Rating" },
  ];

  return (
    <nav className="bg-gray-800 text-white p-4 flex gap-4">
      {links.map((link) => (
        <NavLink
          key={link.to}
          to={link.to}
          className={({ isActive }) =>
            isActive ? "underline font-bold" : "hover:underline"
          }
          data-qa-id={`nav-${link.to.replace("/", "") || "home"}`}
        >
          {link.label}
        </NavLink>
      ))}
    </nav>
  );
}

export default Navbar;
=======================================
FIN FICHERO >> ./frontend/src/components/Navbar.tsx
=======================================
