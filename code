=======================================
INICIO FICHERO >> ./frontend/.env
=======================================
VITE_API_URL=http://backend:3001/api
=======================================
FIN FICHERO >> ./frontend/.env
=======================================

=======================================
INICIO FICHERO >> ./frontend/src/pages/Users.jsx
=======================================
import { useEffect, useState } from "react";

export default function Users() {
  const [users, setUsers] = useState([]);
  const [newUser, setNewUser] = useState({ name: "", email: "" });

  const fetchUsers = async () => {
    const res = await fetch(`${import.meta.env.VITE_API_URL}/users`);
    const data = await res.json();
    setUsers(data);
  };

  const addUser = async () => {
    await fetch(`${import.meta.env.VITE_API_URL}/users`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(newUser),
    });
    setNewUser({ name: "", email: "" });
    fetchUsers();
  };

  const deleteUser = async (id) => {
    await fetch(`${import.meta.env.VITE_API_URL}/users/${id}`, {
      method: "DELETE",
    });
    fetchUsers();
  };

  useEffect(() => {
    fetchUsers();
  }, []);

  return (
    <div>
      <h2>Users</h2>
      <input
        placeholder="Name"
        value={newUser.name}
        onChange={(e) => setNewUser({ ...newUser, name: e.target.value })}
      />
      <input
        placeholder="Email"
        value={newUser.email}
        onChange={(e) => setNewUser({ ...newUser, email: e.target.value })}
      />
      <button onClick={addUser}>Add</button>
      <ul>
        {users.map((u) => (
          <li key={u.id}>
            {u.name} ({u.email}){" "}
            <button onClick={() => deleteUser(u.id)}>Delete</button>
          </li>
        ))}
      </ul>
    </div>
  );
}
=======================================
FIN FICHERO >> ./frontend/src/pages/Users.jsx
=======================================

=======================================
INICIO FICHERO >> ./frontend/src/pages/Dashboard.jsx
=======================================
import { useEffect, useState } from "react";

export default function Dashboard() {
  const [stats, setStats] = useState({
    totalUsers: 0,
    totalProducts: 0,
    totalStock: 0,
  });

  useEffect(() => {
    const fetchStats = async () => {
      const res = await fetch(`${import.meta.env.VITE_API_URL}/stats`);
      const data = await res.json();
      setStats(data);
    };
    fetchStats();
  }, []);

  return (
    <div>
      <h2>Dashboard</h2>
      <p>Total Users: {stats.totalUsers}</p>
      <p>Total Products: {stats.totalProducts}</p>
      <p>Total Stock: {stats.totalStock}</p>
    </div>
  );
}
=======================================
FIN FICHERO >> ./frontend/src/pages/Dashboard.jsx
=======================================

=======================================
INICIO FICHERO >> ./backend/routes/stats.js
=======================================
const express = require("express");
const router = express.Router();
const db = require("../db");

router.get("/", async (req, res) => {
  const totalUsers = await db("users").count("id as count").first();
  const totalProducts = await db("products").count("id as count").first();
  const totalStock = await db("products").sum("stock as total").first();

  res.json({
    totalUsers: totalUsers.count,
    totalProducts: totalProducts.count,
    totalStock: totalStock.total || 0,
  });
});

module.exports = router;
=======================================
FIN FICHERO >> ./backend/routes/stats.js
=======================================

=======================================
INICIO FICHERO >> ./backend/server.js
=======================================
const express = require("express");
const cors = require("cors");
const app = express();
const port = 3001;

app.use(cors());
app.use(express.json());

app.use("/api/users", require("./routes/users"));
app.use("/api/products", require("./routes/products"));
app.use("/api/stats", require("./routes/stats"));

app.listen(port, () => {
  console.log(`Backend listening on http://localhost:${port}`);
});
=======================================
FIN FICHERO >> ./backend/server.js
=======================================

=======================================
INICIO FICHERO >> ./frontend/Dockerfile
=======================================
FROM node:20-alpine
WORKDIR /app

COPY package*.json ./
RUN npm install

COPY . .

EXPOSE 5173
CMD ["npm", "run", "dev"]
=======================================
FIN FICHERO >> ./frontend/Dockerfile
=======================================

=======================================
INICIO FICHERO >> ./backend/Dockerfile
=======================================
FROM node:20-alpine
WORKDIR /app

COPY package*.json ./
RUN npm install

COPY . .

EXPOSE 3001
CMD ["npm", "start"]
=======================================
FIN FICHERO >> ./backend/Dockerfile
=======================================
